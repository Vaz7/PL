
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACHAV APAR APAR2 BINARY BOOL CCHAV COMMA CPAR CPAR2 DATE DATETIME EQUALS FLOAT HEXA INFINITY INTEGER KEY MULTILINE_STRING MULTILINE_STRING_LITERAL NAN NULL OCTAL STRING STRING_LITERAL TIMEconverter : atribsatribs : atribs atrib\n                | atrib\n    atrib : KEY EQUALS contentcontent : value\n                | APAR arr_cont\n                | ACHAV table_cont\n    arr_cont : CPAR\n                | a_cont CPAR\n    a_cont : content\n                | a_cont COMMA content\n    table_cont : CCHAV\n                    | t_cont CCHAV\n    t_cont : KEY EQUALS t_value\n              | t_cont COMMA KEY EQUALS t_value\n     t_value : value\n                | APAR arr_cont\n    value : STRING\n                | BOOL\n                | NULL\n                | INTEGER\n                | FLOAT\n                | BINARY\n                | OCTAL\n                | HEXA\n                | NAN\n                | INFINITY\n                | DATE\n                | TIME\n                | DATETIME\n                | MULTILINE_STRING\n                | STRING_LITERAL\n                | MULTILINE_STRING_LITERAL\n    '
    
_lr_action_items = {'KEY':([0,2,3,5,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,35,37,38,],[4,4,-3,-2,-4,-5,34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-6,-8,-7,-12,-9,-13,41,]),'$end':([1,2,3,5,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,35,37,],[0,-1,-3,-2,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-6,-8,-7,-12,-9,-13,]),'EQUALS':([4,34,41,],[6,39,45,]),'APAR':([6,9,36,39,44,45,],[9,9,9,44,9,44,]),'ACHAV':([6,9,36,44,],[10,10,10,10,]),'STRING':([6,9,36,39,44,45,],[11,11,11,11,11,11,]),'BOOL':([6,9,36,39,44,45,],[12,12,12,12,12,12,]),'NULL':([6,9,36,39,44,45,],[13,13,13,13,13,13,]),'INTEGER':([6,9,36,39,44,45,],[14,14,14,14,14,14,]),'FLOAT':([6,9,36,39,44,45,],[15,15,15,15,15,15,]),'BINARY':([6,9,36,39,44,45,],[16,16,16,16,16,16,]),'OCTAL':([6,9,36,39,44,45,],[17,17,17,17,17,17,]),'HEXA':([6,9,36,39,44,45,],[18,18,18,18,18,18,]),'NAN':([6,9,36,39,44,45,],[19,19,19,19,19,19,]),'INFINITY':([6,9,36,39,44,45,],[20,20,20,20,20,20,]),'DATE':([6,9,36,39,44,45,],[21,21,21,21,21,21,]),'TIME':([6,9,36,39,44,45,],[22,22,22,22,22,22,]),'DATETIME':([6,9,36,39,44,45,],[23,23,23,23,23,23,]),'MULTILINE_STRING':([6,9,36,39,44,45,],[24,24,24,24,24,24,]),'STRING_LITERAL':([6,9,36,39,44,45,],[25,25,25,25,25,25,]),'MULTILINE_STRING_LITERAL':([6,9,36,39,44,45,],[26,26,26,26,26,26,]),'CPAR':([8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,40,44,],[-5,28,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-6,-8,35,-10,-7,-12,-9,-13,-11,28,]),'COMMA':([8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,40,42,43,46,47,],[-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-6,-8,36,-10,-7,-12,38,-9,-13,-11,-14,-16,-17,-15,]),'CCHAV':([10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,33,35,42,43,46,47,],[32,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-8,37,-9,-14,-16,-17,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'converter':([0,],[1,]),'atribs':([0,],[2,]),'atrib':([0,2,],[3,5,]),'content':([6,9,36,44,],[7,30,40,30,]),'value':([6,9,36,39,44,45,],[8,8,8,43,8,43,]),'arr_cont':([9,44,],[27,46,]),'a_cont':([9,44,],[29,29,]),'table_cont':([10,],[31,]),'t_cont':([10,],[33,]),'t_value':([39,45,],[42,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> converter","S'",1,None,None,None),
  ('converter -> atribs','converter',1,'p_converter','projeto_PL_parser.py',7),
  ('atribs -> atribs atrib','atribs',2,'p_atribs','projeto_PL_parser.py',13),
  ('atribs -> atrib','atribs',1,'p_atribs','projeto_PL_parser.py',14),
  ('atrib -> KEY EQUALS content','atrib',3,'p_atrib','projeto_PL_parser.py',22),
  ('content -> value','content',1,'p_content','projeto_PL_parser.py',26),
  ('content -> APAR arr_cont','content',2,'p_content','projeto_PL_parser.py',27),
  ('content -> ACHAV table_cont','content',2,'p_content','projeto_PL_parser.py',28),
  ('arr_cont -> CPAR','arr_cont',1,'p_arr_cont','projeto_PL_parser.py',36),
  ('arr_cont -> a_cont CPAR','arr_cont',2,'p_arr_cont','projeto_PL_parser.py',37),
  ('a_cont -> content','a_cont',1,'p_a_cont','projeto_PL_parser.py',45),
  ('a_cont -> a_cont COMMA content','a_cont',3,'p_a_cont','projeto_PL_parser.py',46),
  ('table_cont -> CCHAV','table_cont',1,'p_table_cont','projeto_PL_parser.py',54),
  ('table_cont -> t_cont CCHAV','table_cont',2,'p_table_cont','projeto_PL_parser.py',55),
  ('t_cont -> KEY EQUALS t_value','t_cont',3,'p_t_cont','projeto_PL_parser.py',65),
  ('t_cont -> t_cont COMMA KEY EQUALS t_value','t_cont',5,'p_t_cont','projeto_PL_parser.py',66),
  ('t_value -> value','t_value',1,'p_t_value','projeto_PL_parser.py',74),
  ('t_value -> APAR arr_cont','t_value',2,'p_t_value','projeto_PL_parser.py',75),
  ('value -> STRING','value',1,'p_value','projeto_PL_parser.py',83),
  ('value -> BOOL','value',1,'p_value','projeto_PL_parser.py',84),
  ('value -> NULL','value',1,'p_value','projeto_PL_parser.py',85),
  ('value -> INTEGER','value',1,'p_value','projeto_PL_parser.py',86),
  ('value -> FLOAT','value',1,'p_value','projeto_PL_parser.py',87),
  ('value -> BINARY','value',1,'p_value','projeto_PL_parser.py',88),
  ('value -> OCTAL','value',1,'p_value','projeto_PL_parser.py',89),
  ('value -> HEXA','value',1,'p_value','projeto_PL_parser.py',90),
  ('value -> NAN','value',1,'p_value','projeto_PL_parser.py',91),
  ('value -> INFINITY','value',1,'p_value','projeto_PL_parser.py',92),
  ('value -> DATE','value',1,'p_value','projeto_PL_parser.py',93),
  ('value -> TIME','value',1,'p_value','projeto_PL_parser.py',94),
  ('value -> DATETIME','value',1,'p_value','projeto_PL_parser.py',95),
  ('value -> MULTILINE_STRING','value',1,'p_value','projeto_PL_parser.py',96),
  ('value -> STRING_LITERAL','value',1,'p_value','projeto_PL_parser.py',97),
  ('value -> MULTILINE_STRING_LITERAL','value',1,'p_value','projeto_PL_parser.py',98),
]
